%% FACED data extraction

  import pickle
  from scipy.io import savemat
  import pandas as pd

  f = open(r'...\sub006.pkl', 'rb')
  content = pickle.load(f)
  savemat('...\output.mat',{'s6':content})

%% MATLAB MLP
% Create the training dataset
X = C; % Input feature vector
Y = labels;      % Target variable
 
% Define the structure of MLP
net = feedforwardnet([X X X]);   % Set the hidden layer size 3x, x=random neural
 
% Configure neural network parameters
net.trainParam.epochs = 100;    % Maximum iterations
net.trainParam.lr = 0.01;        % Learning rate
net.trainParam.goal = 0.01;      % Convergence condition
 
% Training neural network
[net, tr] = train(net, X', Y');


% Test neural network
output = net(Z')';
disp(output)


%% Generate initial network

import random

def gf(num):
    names = locals()
    for i in range(num):
        names['randomlist' + str(i)] =[]
        for j in range(random.randint(2, 6)):
            names['randomlist' + str(i) ].append(random.randint(50, 150))
        print(names['randomlist' + str(i)])
    return names['randomlist' + str(i)]

def ranstep(num):         #Sort the classifiers randomly
    print(random.sample(range(1,num+1),num))

if __name__ == '__main__':
    gf(5)
    #ranstep(5)

